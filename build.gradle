buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

version "3.0.2"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    provided "org.codehaus.groovy:groovy-ant"
    testCompile "org.grails:grails-plugin-testing"

    provided "org.grails.plugins:hibernate4"
    provided "org.hibernate:hibernate-core:4.3.10.Final"
    provided "org.hibernate:hibernate-ehcache:4.3.10.Final"
}

grailsPublish {
    title = 'Platform core plugin'
    desc = 'Grails Platform core plugin'
    developers = [snimavat: 'Sudhir Nimavat']
    githubSlug = '9ci/grails-platform-core'
    issueTrackerUrl = 'https://github.com/9ci/grails-platform-core/issues'
    vcsUrl = 'https://github.com/9ci/grails-platform-core'

    license {
        name = 'Apache-2.0'
    }

    userOrg = '9ci'
    repo = 'grails-plugins'
    bintray {
        //override plufin only if it is snapshot
        override = rootProject.version.endsWith("SNAPSHOT")
    }
}

bootRepackage.enabled = false

 if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }
  
//javadoc.enabled = false
//javadocJar.enabled = false